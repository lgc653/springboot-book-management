{  
  "swagger": "2.0",  
  "info": {  
    "description": "API documentation for Book Management System",  
    "version": "1.0.0",  
    "title": "Book Management API"  
  },  
  "host": "localhost:8080",  
  "basePath": "/",  
  "tags": [  
    {  
      "name": "book-controller",  
      "description": "Book Controller for managing books"  
    }  
  ],  
  "paths": {  
    "/books": {  
      "get": {  
        "tags": [  
          "book-controller"  
        ],  
        "summary": "Get all books",  
        "operationId": "getAllBooks",  
        "produces": [  
          "application/json"  
        ],  
        "responses": {  
          "200": {  
            "description": "successful operation",  
            "schema": {  
              "type": "array",  
              "items": {  
                "$ref": "#/definitions/Book"  
              }  
            }  
          }  
        }  
      },  
      "post": {  
        "tags": [  
          "book-controller"  
        ],  
        "summary": "Create a new book",  
        "operationId": "createBook",  
        "consumes": [  
          "application/json"  
        ],  
        "parameters": [  
          {  
            "in": "body",  
            "name": "book",  
            "description": "Book object that needs to be added to the store",  
            "required": true,  
            "schema": {  
              "$ref": "#/definitions/Book"  
            }  
          }  
        ],  
        "responses": {  
          "201": {  
            "description": "Created",  
            "schema": {  
              "$ref": "#/definitions/Book"  
            }  
          }  
        }  
      }  
    },  
    "/books/{id}": {  
      "get": {  
        "tags": [  
          "book-controller"  
        ],  
        "summary": "Find book by ID",  
        "operationId": "getBookById",  
        "produces": [  
          "application/json"  
        ],  
        "parameters": [  
          {  
            "name": "id",  
            "in": "path",  
            "description": "ID of book to return",  
            "required": true,  
            "type": "integer",  
            "format": "int64"  
          }  
        ],  
        "responses": {  
          "200": {  
            "description": "successful operation",  
            "schema": {  
              "$ref": "#/definitions/Book"  
            }  
          },  
          "404": {  
            "description": "Book not found"  
          }  
        }  
      },  
      "put": {  
        "tags": [  
          "book-controller"  
        ],  
        "summary": "Update an existing book",  
        "operationId": "updateBook",  
        "consumes": [  
          "application/json"  
        ],  
        "parameters": [  
          {  
            "name": "id",  
            "in": "path",  
            "description": "ID of book to update",  
            "required": true,  
            "type": "integer",  
            "format": "int64"  
          },  
          {  
            "in": "body",  
            "name": "book",  
            "description": "Updated book object",  
            "required": true,  
            "schema": {  
              "$ref": "#/definitions/Book"  
            }  
          }  
        ],  
        "responses": {  
          "200": {  
            "description": "successful operation",  
            "schema": {  
              "$ref": "#/definitions/Book"  
            }  
          }  
        }  
      },  
      "delete": {  
        "tags": [  
          "book-controller"  
        ],  
        "summary": "Delete a book by ID",  
        "operationId": "deleteBook",  
        "parameters": [  
          {  
            "name": "id",  
            "in": "path",  
            "description": "ID of book to delete",  
            "required": true,  
            "type": "integer",  
            "format": "int64"  
          }  
        ],  
        "responses": {  
          "204": {  
            "description": "No Content"  
          }  
        }  
      }  
    }  
  },  
  "definitions": {  
    "Book": {  
      "type": "object",  
      "properties": {  
        "id": {  
          "type": "integer",  
          "format": "int64"  
        },  
        "title": {  
          "type": "string"  
        },  
        "author": {  
          "type": "string"  
        }  
      }  
    }  
  }  
}